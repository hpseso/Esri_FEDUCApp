//
// DO NOT EDIT THIS FILE, IT HAS BEEN GENERATED USING AndroidAnnotations.
//


package com.esri.webops.feduc2013;

import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.util.Log;
import android.view.KeyEvent;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup.LayoutParams;
import android.widget.Button;
import android.widget.ListView;
import android.widget.TextView;
import com.esri.webops.feduc2013.R.id;
import com.esri.webops.feduc2013.R.layout;
import com.googlecode.androidannotations.api.BackgroundExecutor;
import com.googlecode.androidannotations.api.SdkVersionHelper;

public final class Agenda_
    extends Agenda
{

    private Handler handler_ = new Handler();

    @Override
    public void onCreate(Bundle savedInstanceState) {
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        setContentView(layout.agenda);
    }

    private void init_(Bundle savedInstanceState) {
    }

    private void afterSetContentView_() {
        session_txvw = ((TextView) findViewById(id.session_txvw));
        agendaList = ((ListView) findViewById(id.agendaList));
        calBtn = ((Button) findViewById(id.cal_btn));
        empty_txvw = ((TextView) findViewById(id.empty_txvw));
        date_txvw = ((TextView) findViewById(id.date_txvw));
        {
            View view = findViewById(id.refresh_btn);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    public void onClick(View view) {
                        refresh_btn();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.map_btn);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    public void onClick(View view) {
                        map_btn();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.cal_btn);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    public void onClick(View view) {
                        cal_btn();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.type_txvw);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    public void onClick(View view) {
                        type_txvw();
                    }

                }
                );
            }
        }
        {
            View view = findViewById(id.all_txvw);
            if (view!= null) {
                view.setOnClickListener(new OnClickListener() {


                    public void onClick(View view) {
                        all_txvw();
                    }

                }
                );
            }
        }
        loadView();
    }

    @Override
    public void setContentView(int layoutResID) {
        super.setContentView(layoutResID);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view, LayoutParams params) {
        super.setContentView(view, params);
        afterSetContentView_();
    }

    @Override
    public void setContentView(View view) {
        super.setContentView(view);
        afterSetContentView_();
    }

    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
        if (((SdkVersionHelper.getSdkInt()< 5)&&(keyCode == KeyEvent.KEYCODE_BACK))&&(event.getRepeatCount() == 0)) {
            onBackPressed();
        }
        return super.onKeyDown(keyCode, event);
    }

    public static Agenda_.IntentBuilder_ intent(Context context) {
        return new Agenda_.IntentBuilder_(context);
    }

    @Override
    public void updateUI() {
        handler_.post(new Runnable() {


            @Override
            public void run() {
                try {
                    Agenda_.super.updateUI();
                } catch (RuntimeException e) {
                    Log.e("Agenda_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    @Override
    public void loadDataFromWeb() {
        BackgroundExecutor.execute(new Runnable() {


            @Override
            public void run() {
                try {
                    Agenda_.super.loadDataFromWeb();
                } catch (RuntimeException e) {
                    Log.e("Agenda_", "A runtime exception was thrown while executing code in a runnable", e);
                }
            }

        }
        );
    }

    public static class IntentBuilder_ {

        private Context context_;
        private final Intent intent_;

        public IntentBuilder_(Context context) {
            context_ = context;
            intent_ = new Intent(context, Agenda_.class);
        }

        public Intent get() {
            return intent_;
        }

        public Agenda_.IntentBuilder_ flags(int flags) {
            intent_.setFlags(flags);
            return this;
        }

        public void start() {
            context_.startActivity(intent_);
        }

    }

}
